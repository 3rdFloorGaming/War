// War.cpp : Defines the entry point for the console application.
//

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <iterator>
#include "Card.cpp"
#include "Card.h"

using std::vector;
using std::cout;
using std::cin;
using std::endl;
using std::random_shuffle;
using std::make_move_iterator;

//Compare Function - this will go in header file
string compareCards(Card p1, Card p2);

//Random generator function
int myrandom (int i) { return std::rand()%i;}

int main()
{
	//Random seed used for shuffling deck
	srand(time(0));

	//Ints that record players' score
	int p1_score = 0;
	int p2_score = 0;

	//Creates deck that players will use
	vector<Card> deck;

	//For loop that populates deck
    for (int j=0; j<13; j++) 
	{
        for (int i=0; i<4; i++) 
		{
			deck.push_back(Card(Value(j), Suit(i)));
        }               
    }

	//Shuffles deck
	random_shuffle(deck.begin(), deck.end(), myrandom);

	//Splits deck into two player decks
	vector<Card> player2(make_move_iterator(deck.begin() + deck.size()/2), make_move_iterator(deck.end()));
	//Erases half of original deck that has been given to player 2's deck
	deck.erase(deck.begin() + deck.size()/2, deck.end());

	//GAME SIMULATION
	while(deck.size() > 0 && player2.size() > 0)
	{
		//Displays the cards that each player plays
		cout << "Player One plays " << deck.back().name() << endl;
		cout << "Player Two plays " << player2.back().name() << endl;
		
		//Compares cards played
		//Once cards are compared, game moves forward accordingly.
		//i.e. If a "1" is returned, player one won. With a "2", player two wins.
		//A "3" signifies a tie, or a war. 
		if((compareCards(deck.back(), player2.back())) == "p1")
		{
			cout << "Player 1 wins!\n";
			deck.pop_back();
			player2.pop_back();
			p1_score++;
		}
		else if((compareCards(deck.back(), player2.back())) == "p2")
		{
			cout << "Player 2 wins!\n";
			deck.pop_back();
			player2.pop_back();
			p2_score++;
		}
		else if((compareCards(deck.back(), player2.back())) == "war")
		{
			cout << "WAR!\n";
			deck.pop_back();
			player2.pop_back();
		}

		//Waits for user to press 'Enter' before continuing to next round
		cin.ignore();

	}


	//Displays final results
	cout << "Player 1: " << p1_score << endl;
	cout << "Player 2: " << p2_score << endl;

	if(p1_score > p2_score)
	{
		cout << "Player 1 wins!" << endl;
	}
	else if(p2_score < p1_score)
	{
		cout << "Player 2 wins!" << endl;
	}
	else if(p1_score == p2_score)
	{
		cout << "It's a tie!!!" << endl;
	}

	return 0;
}

//Comparison test (compares last card in player decks and pops cards after comparison)
string compareCards(Card p1, Card p2)
{
	if(p1.getValue() > p2.getValue())
	{		
		return "p1";
	}
	else if(p1.getValue() < p2.getValue())
	{
		return "p2";
	}
	else
	{
		return "war";
	}
}
